{% if instance_ssl %}
server {
    listen 80;

    server_name {{ instance_subdomain }}.{{ instance_domain }} www.{{ instance_subdomain }}.{{ instance_domain }};
    return 301 https://$server_name$request_uri;
}
{% endif %}
server {
{% if instance_ssl %}
    listen 443 ssl;
{% else %}
    listen 80;
{% endif %}

    server_name {{ instance_subdomain }}.{{ instance_domain }} www.{{ instance_subdomain }}.{{ instance_domain }};
    root /home/{{ instance_user }}/www/{{ instance_env }}/{% if www_relative_dir is defined and www_relative_dir != false %}{{ www_relative_dir }}{% endif %};
    index index.php;
{% if instance_ssl %}

    ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}/privkey.pem;

    add_header Strict-Transport-Security "max-age=31536000";
{% endif %}
{% if basic_auth_create %}

    auth_basic "Restricted";
    auth_basic_user_file /home/{{ instance_user }}/www/{{ instance_env }}/.htpasswd;
{% endif %}

    access_log /home/{{ instance_user }}/www/{{ instance_env }}/logs/access.log;
    error_log /home/{{ instance_user }}/www/{{ instance_env }}/logs/error.log;

    location ~* \.json$ {
      try_files $uri @rewrite;
    }

    location ~ /.well-known {
        root /home/{{ instance_user }}/www/{{ instance_env }};
        allow all;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    location ~ ^/system/files/ {
        try_files $uri @rewrite;
    }

    location ~ ^/system/temporary/ {
        try_files $uri @rewrite;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|hbs|woff) {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public";
        log_not_found off;
    }

    location ^~ /simplesaml {
        alias /home/{{ instance_user }}/www/{{ instance_env }}/current/surfraysaml/www;
        location ~ ^/simplesaml(?<phpfile>.+?\.php)(?<pathinfo>/.*)?$ {
            include fastcgi_params;
            fastcgi_split_path_info ^(.+?\.php)(/.+)$;
{% if php_version == 5 %}
            fastcgi_pass unix:/var/run/{{ distr }}-fpm.sock;
{% else %}
            fastcgi_pass unix:/var/run/php/{{ distr }}-fpm.sock;
{% endif %}
            fastcgi_param SCRIPT_FILENAME $document_root$phpfile;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

{% if instance_hhvm %}
    location / {
        fastcgi_intercept_errors on;
        error_page 500 502 = @fallback;
        try_files $uri /index.php?$query_string;
        include /etc/nginx/hhvm.conf;
    }

    include /etc/nginx/php_fpm_fallback.conf;
{% else %}
    location / {
      try_files  $uri  $uri/  /index.php?$args;
        location ~ \.php$ {
           try_files $uri =404;
{% if php_version == 5 %}
           fastcgi_pass unix:/var/run/{{ distr }}-fpm.sock;
{% else %}
           fastcgi_pass unix:/var/run/php/{{ distr }}-fpm.sock;
{% endif %}
           fastcgi_index index.php;
           #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
           fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
           include fastcgi_params;
        }
    }
{% endif %}
}